name: build RustDeskTempTopMostWindow

on:
  workflow_call:
    inputs:
        upload-artifact:
          type: boolean
          default: true
        target:
            description: 'Target'
            required: false  # 不再强制要求，因为我们使用矩阵
            type: string
            default: 'windows-2022'  # 保留默认值，但矩阵会覆盖它
        configuration:
            description: 'Configuration'
            required: true
            type: string
            default: 'Release'
        platform:
            description: 'Platform'
            required: true
            type: string
            default: 'x64'
        target_version:
            description: 'TargetVersion'
            required: true
            type: string
            default: 'Windows10'

env:
  project_path: WindowInjection/WindowInjection.vcxproj

jobs:
  build-RustDeskTempTopMostWindow:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022, macos-latest]
    env:
      build_output_dir: RustDeskTempTopMostWindow/WindowInjection/${{ inputs.platform }}/${{ inputs.configuration }}
    steps:
      - name: Add MSBuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v2

      - name: Install Xcode (macOS)
        if: runner.os == 'macOS'
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Download the source code
        run: |
          git clone https://github.com/rustdesk-org/RustDeskTempTopMostWindow RustDeskTempTopMostWindow

      - name: Build the project (Windows)
        if: runner.os == 'Windows'
        run: |
          cd RustDeskTempTopMostWindow && git checkout 53b548a5398624f7149a382000397993542ad796
          msbuild ${{ env.project_path }} -p:Configuration=${{ inputs.configuration }} -p:Platform=${{ inputs.platform }} /p:TargetVersion=${{ inputs.target_version }}

      - name: Build the project (macOS)
        if: runner.os == 'macOS'
        run: |
          cd RustDeskTempTopMostWindow && git checkout 53b548a5398624f7149a382000397993542ad796
          # macOS 下的构建命令，可能需要根据项目实际情况调整
          xcodebuild -project ${{ env.project_path }} -configuration ${{ inputs.configuration }} -arch ${{ inputs.platform }}

      - name: Archive build artifacts
        uses: actions/upload-artifact@master
        if: ${{ inputs.upload-artifact }}
        with:
            name: topmostwindow-artifacts-${{ matrix.os }}  # 为不同平台设置不同的 artifact 名称
            path: |
              ./${{ env.build_output_dir }}/WindowInjection.dll
